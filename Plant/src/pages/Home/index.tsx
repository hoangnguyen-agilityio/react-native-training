import { NativeStackNavigationProp } from '@react-navigation/native-stack';
import React, { FC, useEffect, useState } from 'react';
import {
  Image,
  Linking,
  Pressable,
  ScrollView,
  Text,
  View,
} from 'react-native';
import Catalogs from '../../components/Catalogs';
import Header from '../../components/HeaderLayout';
import Photographies from '../../components/Photographies';
import PlantTypes from '../../components/PlantTypes';
import SearchBar from '../../components/SearchBar';
import Section from '../../components/SectionLayout';
import { NavigationListType } from '../../constants/navigationList';
import styles from './styles';
import { Notification, Notifications } from 'react-native-notifications';

interface Props {
  navigation: NativeStackNavigationProp<NavigationListType, 'Home'>;
}

const useMount = func => useEffect(() => func(), []);

const useInitialURL = () => {
  const [url, setUrl] = useState(null);
  const [processing, setProcessing] = useState(true);

  useMount(() => {
    const getUrlAsync = async () => {
      // Get the deep link used to open the app
      const initialUrl = await Linking.getInitialURL();

      // The setTimeout is just for testing purpose
      setTimeout(() => {
        setUrl(initialUrl);
        setProcessing(false);
      }, 1000);
    };

    getUrlAsync();
  });

  return { url, processing };
};

const Home: FC<Props> = ({ navigation }) => {
  const { url: initialUrl, processing } = useInitialURL();

  useEffect(() => {
    Notifications.registerRemoteNotifications();

    Notifications.events().registerNotificationReceivedForeground(
      (notification: Notification, completion) => {
        console.log(
          `Notification received in foreground: ${notification.title} : ${notification.body}`,
        );
        completion({ alert: false, sound: false, badge: false });
      },
    );

    Notifications.events().registerNotificationOpened(
      (notification: Notification, completion) => {
        console.log(`Notification opened: ${notification.payload}`);
        completion();
      },
    );
  }, []);

  const handleMoveToPage = (page: keyof NavigationListType) => {
    if (page) {
      navigation.navigate(page);
    }
  };

  return (
    <ScrollView>
      <Header textBg="Home">
        <Section>
          <Text>
            {processing
              ? `Processing the initial url from a deep link`
              : `The deep link is: ${initialUrl || 'None'}`}
          </Text>
        </Section>
        <Section>
          <Pressable
            style={styles.headerContent}
            onPress={() =>
              Notifications.postLocalNotification({
                title: 'Local notification',
                body: 'This notification was generated by the app!',
                extra: 'data',
              })
            }>
            <View>
              <Text style={styles.headerTitle}>Hello Taylor,</Text>
              <Text style={styles.headerDesc}>
                Letâ€™s Learn More About Plants
              </Text>
            </View>
            <Image
              source={require('../../assets/images/avatar.png')}
              style={styles.avatar}
            />
          </Pressable>
        </Section>
      </Header>
      <Section style={styles.main}>
        <SearchBar style={{ marginTop: -25 }} />
        <View style={styles.catalogsWrapper}>
          <Catalogs handleMoveToPage={handleMoveToPage} />
        </View>

        <Text style={styles.sectionTitle}>Plant Types</Text>
        <View style={styles.horizontalListWrapper}>
          <PlantTypes />
        </View>
        <Text style={styles.sectionTitle}>Photography</Text>
        <View style={styles.horizontalListWrapper}>
          <Photographies />
        </View>
      </Section>
    </ScrollView>
  );
};

export default Home;
